# 로컬 프론트 & 백엔드
spring:
  config:
    activate:
      on-profile: local

  # DB & JPA Configuration
  datasource:
    url: jdbc:mysql://localhost:3306/ziglogdb
    username: root
    password: rootpwd
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa: #JPA Configuration
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    open-in-view: false #SSE 테스트를 위해 끄기

  #OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 574121728411-si5ub2jih5ua9h8jtt0jatf72qsrt00p.apps.googleusercontent.com
            client-secret: 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
            scope:
              - profile
              - email
            redirect-uri: ${base-url.backend}/api/login/oauth2/code/google

          kakao:
            client-id: 25a90390f82ceae3bbfe9bbf7174c2c6
            client-secret: hhsmxlcxDPWNJMDPI6JrhF2SUoWR8AKW
            redirect-uri: ${base-url.backend}/api/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_image
              - account_email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # Redis Configuration
  data:
    redis:
      host: 127.0.0.1
      password:
      port: 6379
      repositories:
        enabled: true

server:
  port: 8080
  servlet:
    context-path: /api

kafka:
  bootstrap: 127.0.0.1:9092 #single

base-url:
  frontend: http://localhost:3000
  backend: http://localhost:8080
